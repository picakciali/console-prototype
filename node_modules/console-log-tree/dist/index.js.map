{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["class logTree {\n  constructor() {\n    this.settings = {\n      keyword: {\n        name: 'name',\n        children: 'children'\n      },\n      maxLevel: 1000,\n    }\n  }\n\n  setPre(level, hasNext, parentPre = '') {\n    return `${parentPre}${hasNext ? '├' : '└' }── `\n  }\n\n  setTransferPre(parentPre = '', hasNext) {\n    return `${parentPre}${hasNext ? '│' : ' '}   `\n  }\n\n  parse(tree, level = 0, parentPre = '', treeStr = '') {\n    if (!this.check(tree, level)) return ''\n\n    if (Array.isArray(tree)) {\n      tree.forEach((child, index) => {\n        const hasNext = tree[index + 1] ? true : false\n        const children = child[this.settings.keyword.children]\n\n        treeStr += `${this.setPre(level, hasNext, parentPre)}${child[this.settings.keyword.name]}\\n`\n\n        if (children) {\n          treeStr += this.parse(children, level + 1, this.setTransferPre(parentPre, hasNext))\n        }\n      })\n    } else {\n      const children = tree[this.settings.keyword.children]\n      treeStr = `${tree[this.settings.keyword.name]}\\n`\n      if (children) {\n        treeStr += this.parse(children, level + 1)\n      }\n    }\n\n    return treeStr\n  }\n\n  setSettings(settings = {}) {\n    this.settings = Object.assign(this.setSettings(settings))\n  }\n\n  log(tree) {\n    console.log(this.parse(tree))\n  }\n\n  check(tree, level) {\n    if (typeof tree !== 'object') return false\n    if (level >= this.settings.maxLevel) return false\n\n    return true\n  }\n}\n\nexport default new logTree()\n\n"],"names":["logTree","settings","keyword","name","children","maxLevel","level","hasNext","parentPre","tree","treeStr","check","Array","isArray","forEach","child","index","setPre","parse","setTransferPre","Object","assign","setSettings","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAAMA;;;EACJ,qBAAc;EAAA;;EACZ,SAAKC,QAAL,GAAgB;EACdC,MAAAA,OAAO,EAAE;EACPC,QAAAA,IAAI,EAAE,MADC;EAEPC,QAAAA,QAAQ,EAAE;EAFH,OADK;EAKdC,MAAAA,QAAQ,EAAE;EALI,KAAhB;EAOD;;;;6BAEMC,OAAOC,SAAyB;EAAA,UAAhBC,SAAgB,uEAAJ,EAAI;EACrC,uBAAUA,SAAV,SAAsBD,OAAO,GAAG,GAAH,GAAS,GAAtC;EACD;;;uCAEuC;EAAA,UAAzBC,SAAyB,uEAAb,EAAa;EAAA,UAATD,OAAS;EACtC,uBAAUC,SAAV,SAAsBD,OAAO,GAAG,GAAH,GAAS,GAAtC;EACD;;;4BAEKE,MAA+C;EAAA;;EAAA,UAAzCH,KAAyC,uEAAjC,CAAiC;EAAA,UAA9BE,SAA8B,uEAAlB,EAAkB;EAAA,UAAdE,OAAc,uEAAJ,EAAI;EACnD,UAAI,CAAC,KAAKC,KAAL,CAAWF,IAAX,EAAiBH,KAAjB,CAAL,EAA8B,OAAO,EAAP;;EAE9B,UAAIM,KAAK,CAACC,OAAN,CAAcJ,IAAd,CAAJ,EAAyB;EACvBA,QAAAA,IAAI,CAACK,OAAL,CAAa,UAACC,KAAD,EAAQC,KAAR,EAAkB;EAC7B,cAAMT,OAAO,GAAGE,IAAI,CAACO,KAAK,GAAG,CAAT,CAAJ,GAAkB,IAAlB,GAAyB,KAAzC;EACA,cAAMZ,QAAQ,GAAGW,KAAK,CAAC,KAAI,CAACd,QAAL,CAAcC,OAAd,CAAsBE,QAAvB,CAAtB;EAEAM,UAAAA,OAAO,cAAO,KAAI,CAACO,MAAL,CAAYX,KAAZ,EAAmBC,OAAnB,EAA4BC,SAA5B,CAAP,SAAgDO,KAAK,CAAC,KAAI,CAACd,QAAL,CAAcC,OAAd,CAAsBC,IAAvB,CAArD,OAAP;;EAEA,cAAIC,QAAJ,EAAc;EACZM,YAAAA,OAAO,IAAI,KAAI,CAACQ,KAAL,CAAWd,QAAX,EAAqBE,KAAK,GAAG,CAA7B,EAAgC,KAAI,CAACa,cAAL,CAAoBX,SAApB,EAA+BD,OAA/B,CAAhC,CAAX;EACD;EACF,SATD;EAUD,OAXD,MAWO;EACL,YAAMH,QAAQ,GAAGK,IAAI,CAAC,KAAKR,QAAL,CAAcC,OAAd,CAAsBE,QAAvB,CAArB;EACAM,QAAAA,OAAO,aAAMD,IAAI,CAAC,KAAKR,QAAL,CAAcC,OAAd,CAAsBC,IAAvB,CAAV,OAAP;;EACA,YAAIC,QAAJ,EAAc;EACZM,UAAAA,OAAO,IAAI,KAAKQ,KAAL,CAAWd,QAAX,EAAqBE,KAAK,GAAG,CAA7B,CAAX;EACD;EACF;;EAED,aAAOI,OAAP;EACD;;;oCAE0B;EAAA,UAAfT,QAAe,uEAAJ,EAAI;EACzB,WAAKA,QAAL,GAAgBmB,MAAM,CAACC,MAAP,CAAc,KAAKC,WAAL,CAAiBrB,QAAjB,CAAd,CAAhB;EACD;;;0BAEGQ,MAAM;EACRc,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWT,IAAX,CAAZ;EACD;;;4BAEKA,MAAMH,OAAO;EACjB,UAAI,QAAOG,IAAP,MAAgB,QAApB,EAA8B,OAAO,KAAP;EAC9B,UAAIH,KAAK,IAAI,KAAKL,QAAL,CAAcI,QAA3B,EAAqC,OAAO,KAAP;EAErC,aAAO,IAAP;EACD;;;;;;AAGH,cAAe,IAAIL,OAAJ,EAAf;;;;;;;;"}